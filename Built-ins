This part of the JavaScript section on MDN serves as a repository of facts about the JavaScript language. Read more about this reference.

Built-ins
JavaScript standard built-in objects, along with their methods and properties.

Value properties
Infinity
NaN
undefined
globalThis
Function properties
eval()
isFinite()
isNaN()
parseFloat()
parseInt()
decodeURI()
decodeURIComponent()
encodeURI()
encodeURIComponent()
Fundamental objects
Object
Function
Boolean
Symbol
Error objects
Error
AggregateError
EvalError
InternalError
RangeError
ReferenceError
SyntaxError
TypeError
URIError
Numbers & dates
Number
BigInt
Math
Date
Text processing
String
RegExp
Indexed Collections
Array
Int8Array
Uint8Array
Uint8ClampedArray
Int16Array
Uint16Array
Int32Array
Uint32Array
Float32Array
Float64Array
BigInt64Array
BigUint64Array
Keyed collections
Map
Set
WeakMap
WeakSet
Structured data
ArrayBuffer
SharedArrayBuffer
Atomics
DataView
JSON
Control abstraction
GeneratorFunction
AsyncGeneratorFunction
Generator
AsyncGenerator
AsyncFunction
Promise
Reflection
Reflect
Proxy
Internationalization
Intl
Intl.Collator
Intl.DateTimeFormat
Intl.DisplayNames
Intl.ListFormat
Intl.Locale
Intl.NumberFormat
Intl.PluralRules
Intl.RelativeTimeFormat
WebAssembly
WebAssembly
WebAssembly.Module
WebAssembly.Instance
WebAssembly.Memory
WebAssembly.Table
WebAssembly.CompileError
WebAssembly.LinkError
WebAssembly.RuntimeError
Statements
JavaScript statements and declarations

Control flow
Block
break
continue
Empty
if...else
switch
throw
try...catch
Declarations
var
let
const
Functions and classes
function
function*
async function
return
class
Iterations
do...while
for
for each...in
for...in
for...of
for await...of
while
Other
debugger
export
import
label
with
Expressions and operators
JavaScript expressions and operators.

Primary expressions
this
function
class
function*
yield
yield*
async function
await
[]
{}
/ab+c/i
( )
null
Left-hand-side expressions
Property accessors
new
new.target
super
...obj
Increment & decrement
A++
A--
++A
--A
Unary operators
delete
void
typeof
+
-
~
!
Arithmetic operators
+
-
/
*
%
**
Relational operators
in
instanceof
<
>
<=
>=
Equality operators
==
!=
===
!==
Bitwise shift operators
<<
>>
>>>
Binary bitwise operators
&
|
^
Binary logical operators
&&
||
Conditional (ternary) operator
(condition ? ifTrue : ifFalse)
Assignment operators
=
*=
/=
%=
+=
-=
<<=
>>=
>>>=
&=
^=
|=
[a, b] = [1, 2]
{a, b} = {a:1, b:2}
Functions
This chapter documents how to work with JavaScript functions to develop your applications.

arguments
Arrow functions
Default parameters
Rest parameters
Additional reference pages
Lexical grammar
Data types and data structures
Strict mode
Deprecated features
Edit this page on MDN
