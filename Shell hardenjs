Slackware specific hardening
How does it work?
The script is divided (well kinda) into dynamic and static changes. The static changes are applied with patch files and the dynamic modifications happen usually with certain commands.

Static changes
The generic etc patch assumes that you have at least the following packages installed:

network-scripts
sysvinit-scripts
etc
shadow
logrotate
sysklogd
Then there's separate patch files for different services/daemons. See the services section for more information.

What does it do?
DISCLAIMER: This is not a complete list.

Authentication
"Fix" the single-user mode to use su-login instead of agetty
Configures a bit better password policy to login.defs
Changes the hashing mechanism to SHA512 and more crypt rounds
Authorization
Sets a maximum number of failed login attempts (faillog)
Create login access control table (/etc/login.access)
Create access time file (/etc/porttime)
/etc/limits
/etc/login.defs:
Disallow logins if home dir does not exist
SSH AllowGroups users
Restrict the use of su (prefer sudo instead)
/etc/suauth
/etc/porttime
/etc/login.defs: SU_WHEEL_ONLY
Restrict use of cron
Accounting
Enable process accounting (acct)
Log rotation for process accounting (pacct), since these files will grow huge
Harden user accounts
Sets restrictions for normal users
Sets the maximum number of processes available to a single user (ulimit -u)
Sets the maximum size of core files created (ulimit -c)
Sets a session timeout (TMOUT) in certain conditions
Sets stricter umask in all the following locations:
/etc/login.defs
/etc/limits
/etc/profile
Removes "unnecessary" shells
Sets useradd defaults
INACTIVE days to lock accounts after the password expires
rbash as default shell
Removes user daemon from group adm (as we will take use of the adm group)
Fix gshadow with grpck
Groups
Makes default log files group adm readable (as in Debian)
Users in the wheel group are able to create cronjobs (as described in /usr/doc/dcron-4.5/README)
Even though we use user private groups, the users group is used to define which users are allowed to login interactively
Configures services
Removes unnecessary services
xinetd (/etc/inetd.conf)
Goes through /etc/rc.d/rc.* and disables plenty of those
atd from rc.M
X11 -nolisten tcp
Enable some security and auditing related services
rc.firewall
Through rc.local:
logoutd
icmpinfo
mdadm --monitor (if /proc/mdstat exists)
Process accounting (acct)
SBo related (if installed):
Snort
arpwatch
Tor
Privoxy
audit
Nagios
Apcupsd
ClamAV
Mrtg
p0f
Hardens few specific services
SSH
Sendmail
Listen only on localhost by default
Disable the MSA
Don't show the version on the banner
sudo
Don't cache the password (timestamp_timeout) (should also mitigate against CVE-2013-1775)
Always require password with sudo -l (listpw)
noexec as default
Require root's password instead of user's
Send alerts on most errors
Additional logging to /var/log/sudo.log
PHP
Apache httpd
File system related
Removes a bunch of SUID/SGID bits
at
chfn + chsh
uucp package
floppy package (/usr/bin/fdmount)
ssh-keysign
Sets more strict permissions on certain files that might contain secrets or other sensitive information
btmp & wtmp
Removes world-readibility from /var/www
Removes world-readibility from home directories
Enables RAID state monitoring with mdadm --monitor
TODO: Add a table about file ownership & permission changes. At least the most relevant ones.

Network related
Creates and enables a basic firewall
Optional static ARP cache through /etc/rc.d/rc.static_arp
Other controls
Modifies crontab behaviour a bit
Users in the wheel group are able to create cronjobs (as described in /usr/doc/dcron-4.5/README)
Increase cron's logging from notice to info
Notice that Dillon's cron does not support the /etc/cron.{allow,deny} lists
Clear /tmp on boot (also recommended in FHS)
TODO: is it redundant to have it both in rc.M and rc.S?
Removes unnecessary / potentially dangerous packages
netkit-rsh
uucp
floppy
Make installpkg store the MD5 checksums
Periodic checks
Some things are added to cron: TODO

rkhunter
sysstat
From sysstat.crond:

# Run system activity accounting tool every 10 minutes
*/10 * * * * if [ -x /usr/lib64/sa/sa1 ]; then /usr/lib64/sa/sa1 -S DISK 1 1; elif [ -x /usr/lib/sa/sa1 ]; then /usr/lib/sa/sa1 -S DISK 1 1; fi
# 0 * * * * /usr/lib/sa/sa1 -S DISK 600 6 &
# Generate a daily summary of process accounting at 23:53
53 23 * * * if [ -x /usr/lib64/sa/sa2 ]; then /usr/lib64/sa/sa2 -A; elif [ -x /usr/lib/sa/sa2 ]; then /usr/lib/sa/sa2 -A; fi
Physical security related
Sets the authorized_default to USB devices
X11:
DontZap
/etc/shutdown.allow and /sbin/shutdown -a (FWIW)
Wipe
WARNING: This is a highly experimental and dangerous feature (and completely optional)! Use at your own risk!

This is something that has been cooking for a while now. It's a self-destruct sequence for your server :)

The patch creates a new runlevel (5) to your Slackware, which when activated, will remove LUKS headers from your disk and copies them inside the encrypted disk. So if anything should happen, the server is not restorable anymore, as the disk encryption keys are gone. When the runlevel is switched back (to say 3), the headers are written back to where they belong.

So to wipe LUKS headers, you just switch to runlevel 5: telinit 5 and to restore just switch back to 3: telinit 3.

There is still some issues, such as some services will be started again (such as crond) when returning to runlevel 3. This is because rc.M doesn't really consider users switching back and forth between runlevels. So this is a work-in-progress.

As a workaround, there is also a new runlevel 2 that can be used to safely return from runlevel 5. Now we don't need to care about daemons starting over and over again from rc.M (runlevel 3).

Logging
Makes default log files group adm readable (as in Debian)
Notice that this takes place only after logrotate. The ownerships/permissions of the existing logs are not modified.
Use shred to remove rotated log files
Enables the use of xconsole (or makes it possible). You can use it with sudo as follows: ADMINS ALL=(:adm) NOPASSWD: /usr/bin/xconsole
Enables bootlogd
Makes certain log files append only
Increase the default log retention period to 26 weeks
Increase wtmp log size through logrotate
Principle of least privilege
You can use the adm group to view log files, so you don't need to be root to do that. Just add a user to the adm group, or configure sudo as follows:
ADMINS ALL=(:adm) NOPASSWD: /bin/cat
View bad logins with: ADMINS ALL=(:adm) NOPASSWD: /usr/bin/lastb
Or recent logins: ADMINS ALL=(:adm) NOPASSWD: /usr/bin/lastlog ""
Remove floppy and scanner from CONSOLE_GROUPS
Restrict the use of at and cron from regular users
Additional features
Download & verify Slackware MANIFEST by running make manifest
Check Slackware installation's integrity from MANIFEST (owner & permission) (-I switch)
Slackware audit profile
There's a Slackware audit profile for Lynis in this repo. The main differences to default.prf are:

Disable PAM plugin
Disable systemd plugin
Disable PAM checks:
AUTH-9262
AUTH-9264 (pam.conf)
AUTH-9266 (pam.d files)
AUTH-9268 (PAM modules)
AUTH-9278 (PAM LDAP)
PKGS-7398 (package audit tool)
PKGS-7308 (RPM)
Other security software
There is a bunch of security related software that you can find at SBo. You could consider installing these for additional security.

HIDS:
Tiger
Aide
rkhunter
audit
chkrootkit
Network related:
arpwatch
p0f
Web server:
ModSecurity
Suhosin
Other:
vlock
And from other sources than SBo:

logwatch
checksec.sh
psad
Lynis
